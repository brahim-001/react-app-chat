{"version":3,"sources":["Message.js","Firebase.js","App.js","reportWebVitals.js","index.js"],"names":["Message","forwardRef","ref","message","isUser","username","className","Card","CardContent","Typography","variant","component","text","db","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","App","useState","input","setInput","messages","setMessage","setUsername","useEffect","collectionRef","collection","q","query","orderBy","onSnapshot","snapshot","docs","map","doc","data","id","prompt","src","alt","FormControl","Input","placeholder","value","onChange","e","target","IconButton","disabled","type","onClick","event","preventDefault","timestamp","serverTimestamp","addDoc","color","endIcon","duration","easing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAmDeA,G,MAxBGC,sBAAW,WAAsBC,GAAS,IAA7BC,EAA4B,EAA5BA,QAEvBC,EAFmD,EAAnBC,WAEVF,EAAQE,SAGpC,OACE,sBAAKH,IAAKA,EAAKI,UAAS,kBAAaF,GAAU,gBAAvB,KAAxB,UAEE,mBAAGE,UAAU,mBAAb,UAAmCF,GAAD,UAAgBD,EAAQE,UAAY,kBACtE,cAACE,EAAA,EAAD,CAAMD,UAAWF,EAAS,oBAAsB,qBAAhD,SACE,cAACI,EAAA,EAAD,CAAaF,UAAU,cAAvB,SACE,cAACG,EAAA,EAAD,CACCC,QAAQ,KACRC,UAAU,KAFX,SAIC,kCAAKR,EAAQS,qB,gBCjBTC,GArBKC,YAAc,CAE1BC,OAAQ,0CACRC,WAAY,iDACZC,UAAW,iCACXC,cAAe,6CACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAYZC,e,QC0EIC,MArFf,WAAgB,IAAD,EAEaC,mBAAS,IAFtB,mBAENC,EAFM,KAECC,EAFD,OAGkBF,mBAAS,IAH3B,mBAGNG,EAHM,KAGIC,EAHJ,OASmBJ,mBAAS,IAT5B,mBASNnB,EATM,KASIwB,EATJ,KA+Cb,OApCAC,qBAAW,WAET,IAAMC,EAAgBC,YAAWnB,EAAI,YAC/BoB,EAAIC,YAAMH,EAAeI,YAAQ,YAAY,SACnDC,YAAWH,GAAG,SAACI,GAAD,OACDT,EAAWS,EAASC,KAAKC,KAAI,SAACC,GAAD,mBAAC,eAAgBA,EAAIC,QAArB,IAA6BC,GAAIF,EAAIE,cAIjF,IAEDZ,qBAAU,WACPD,EAAYc,OAAO,gCAClB,IAwBD,sBAAKrC,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAYsC,IAAI,kGAAmGC,IAAI,KACtI,gDACA,0CAAaxC,EAAb,OAMA,sBAAMC,UAAU,WAAhB,SAEE,eAACwC,EAAA,EAAD,CAAaxC,UAAU,kBAAvB,UACE,cAACyC,EAAA,EAAD,CAAOzC,UAAU,YAAY0C,YAAY,qBAAqBC,MAAOxB,EAAOyB,SAlBpF,SAAkBC,GAChBzB,EAASyB,EAAEC,OAAOH,UAmBZ,cAACI,EAAA,EAAD,CAAY/C,UAAU,iBAAiBgD,UAAW7B,EAAO8B,KAAK,SAASC,QApC5D,SAACC,GAClBA,EAAMC,iBAEN,IAAMjB,EAAO,CACX7B,KAAMa,EACNpB,SAAWA,EACXsD,UAAWC,eAGP7B,EAAgBC,YAAWnB,EAAI,YAEzBgD,YAAO9B,EAAeU,GAClCb,EAAW,GAAD,mBAAKD,GAAL,CAAe,CAACtB,SAAUA,EAAUO,KAAMa,MACpDC,EAAS,KAuB0FoC,MAAM,UAAUpD,QAAQ,YAAYqD,QAAS,cAAC,IAAD,IAA1I,SACK,cAAC,IAAD,WAMT,cAAC,IAAD,CAAUC,SAAU,IAAOC,OAAO,cAAlC,SAGMtC,EAASY,KAAI,SAACpC,GAAD,OACd,cAAC,EAAD,CAAUE,SAAUA,EAAUF,QAASA,aC1EnC+D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5326a261.chunk.js","sourcesContent":["import { Card, CardContent, Typography } from '@material-ui/core';\r\nimport React, { forwardRef } from 'react';\r\nimport './Message.css';\r\n// const  Message = forwardRef(( { message, username }, ref) => {\r\n\r\n//   const isUser = username === message.username;\r\n\r\n\r\n//   return (\r\n//     <div ref={ref} className={`message ${isUser && 'message__user'} `}>\r\n//       <Card className={isUser ? \"message__userCard\" : \"message__guestCard\"}>\r\n//         <CardContent>\r\n//           <Typography\r\n//             variant=\"h5\"\r\n//             component=\"h1\"\r\n//           >\r\n\r\n//             <p>{message.username} : {message.text}</p>\r\n\r\n//           </Typography>\r\n//         </CardContent>\r\n//       </Card>\r\n//     </div>\r\n\r\n//   )\r\n// })\r\n\r\nconst  Message =  forwardRef(({message, username}, ref) => {\r\n\r\n  const isUser = username === message.username;\r\n\r\n\r\n  return (\r\n    <div ref={ref} className={`message ${isUser && 'message__user'} `}>\r\n\r\n      <p className=\"message_username\">{ !isUser &&   `${message.username || 'Unknown User'}`}</p>\r\n      <Card className={isUser ? \"message__userCard\" : \"message__guestCard\"}>\r\n        <CardContent className=\"cardContent\">\r\n          <Typography\r\n           variant=\"h5\"\r\n           component=\"h2\"\r\n          >\r\n           <p> {message.text}</p>\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n\r\n  )\r\n});\r\n\r\nexport default Message\r\n","import 'firebase/firestore';\r\nimport { initializeApp } from \"firebase/app\"\r\nimport { getFirestore } from \"firebase/firestore\"\r\n\r\nconst firebaseApp = initializeApp({\r\n\r\n        apiKey: \"AIzaSyAUaqs4vykBHOYhaHB2rCHmnInYtpYUmFo\",\r\n        authDomain: \"facebook-messenger-clone-98abd.firebaseapp.com\",\r\n        projectId: \"facebook-messenger-clone-98abd\",\r\n        storageBucket: \"facebook-messenger-clone-98abd.appspot.com\",\r\n        messagingSenderId: \"960843468743\",\r\n        appId: \"1:960843468743:web:028f6d94723a18ec0113e2\",\r\n        measurementId: \"G-1V1WK30RNS\"\r\n});\r\n\r\n\r\n// if (!firebaseApp.apiKey) throw new Error( \"missing firebase credential  : apikey\")\r\n// if (!firebaseApp.authDomain) throw new Error( \"missing firebase credential  : authDomain\")\r\n// if (!firebaseApp.projectId) throw new Error( \"missing firebase credential  : projectId\")\r\n// if (!firebaseApp.storageBucket) throw new Error( \"missing firebase credential  : storageBucket\")\r\n// if (!firebaseApp.messagingSenderId) throw new Error( \"missing firebase credential  : messagingSenderId\")\r\n// if (!firebaseApp.appId) throw new Error( \"missing firebase credential  : appId\")\r\n// if (!firebaseApp.measurementId) throw new Error( \"missing firebase credential  : measurementId\")\r\n\r\nconst db = getFirestore();\r\nexport default db;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css'\nimport { Button } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport { FormControl, Input, IconButton } from '@material-ui/core';\nimport Message from './Message';\nimport db from './Firebase';\nimport {onSnapshot, collection ,  serverTimestamp, addDoc, query, orderBy} from \"firebase/firestore\";\nimport FlipMove from \"react-flip-move\";\n\n\n\n\nfunction App() {\n\n  const [input, setInput] = useState('');\n  const [messages, setMessage] = useState([\n  //  {username: \"ahmed\", text:\"bbbbbbbbbb\"},\n  //  {username: \"\", text:\"salaaam\"},\n  //  {username: \"ahmed\", text:\"Hello Guys !\"}\n\n  ]);\n  const [username, setUsername] = useState('');\n\n  useEffect( () => {\n\n    const collectionRef = collection(db, \"messages\");\n    const q = query(collectionRef, orderBy(\"timestamp\",\"desc\"));\n    onSnapshot(q, (snapshot) =>\n                 setMessage(snapshot.docs.map((doc) => (  { ...doc.data(), id: doc.id }  )))\n    );\n\n  },\n  []);\n\n useEffect(() => {\n    setUsername(prompt('enter your name please ..'))\n  }, [])\n\n const sendMessage = (event) => {\n    event.preventDefault();\n\n    const data = {\n      text: input ,\n      username:  username,\n      timestamp: serverTimestamp(),\n   }  \n\n    const collectionRef = collection(db, \"messages\")\n    \n    const test= addDoc(collectionRef, data);    \n    setMessage([...messages, {username: username, text: input}])\n    setInput('') \n  }\n\n  function onchange(e) {\n    setInput(e.target.value)\n  }\n\n\n  return (\n    <div className=\"App\" >\n      <img className=\"app_image\" src=\"https://d1fmx1rbmqrxrr.cloudfront.net/cnet/i/edit/2016/10/fb-messenger-logo-770.jpg?w=100&h=100\"  alt=\"\"/>\n      <h1>Messenger App </h1>\n      <h3>Welcome {username} </h3>\n\n\n\n\n     \n      <form className=\"app_form\">\n\n        <FormControl className=\"app_formControl\">\n          <Input className=\"app_input\" placeholder=\"Enter a message...\" value={input} onChange={onchange} />\n          \n          <IconButton className=\"app_iconButton\" disabled={!input} type='submit' onClick={sendMessage} color=\"primary\" variant=\"contained\" endIcon={<SendIcon />}>\n               <SendIcon/>\n          </IconButton>\n        </FormControl>\n        \n      </form>\n\n      <FlipMove duration={1000}  easing=\"ease-in-out\">\n         \n      {\n            messages.map((message) => (\n           <Message  username={username} message={message} />\n           ))\n        }\n      </FlipMove>\n\n\n     \n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}